/* tslint:disable */
/* eslint-disable */
/**
 * GameTV service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Player1,
    Player1FromJSON,
    Player1FromJSONTyped,
    Player1ToJSON,
    Player2,
    Player2FromJSON,
    Player2FromJSONTyped,
    Player2ToJSON,
} from './';

/**
 * 
 * @export
 * @interface Matches
 */
export interface Matches {
    /**
     * 
     * @type {string}
     * @memberof Matches
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Matches
     */
    team1?: string;
    /**
     * 
     * @type {string}
     * @memberof Matches
     */
    team2?: string;
    /**
     * 
     * @type {string}
     * @memberof Matches
     */
    score?: string;
    /**
     * 
     * @type {string}
     * @memberof Matches
     */
    tournament?: string;
    /**
     * 
     * @type {Array<Player1>}
     * @memberof Matches
     */
    players1?: Array<Player1>;
    /**
     * 
     * @type {Array<Player2>}
     * @memberof Matches
     */
    players2?: Array<Player2>;
}

export function MatchesFromJSON(json: any): Matches {
    return MatchesFromJSONTyped(json, false);
}

export function MatchesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Matches {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'team1': !exists(json, 'team1') ? undefined : json['team1'],
        'team2': !exists(json, 'team2') ? undefined : json['team2'],
        'score': !exists(json, 'score') ? undefined : json['score'],
        'tournament': !exists(json, 'tournament') ? undefined : json['tournament'],
        'players1': !exists(json, 'players1') ? undefined : ((json['players1'] as Array<any>).map(Player1FromJSON)),
        'players2': !exists(json, 'players2') ? undefined : ((json['players2'] as Array<any>).map(Player2FromJSON)),
    };
}

export function MatchesToJSON(value?: Matches | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'team1': value.team1,
        'team2': value.team2,
        'score': value.score,
        'tournament': value.tournament,
        'players1': value.players1 === undefined ? undefined : ((value.players1 as Array<any>).map(Player1ToJSON)),
        'players2': value.players2 === undefined ? undefined : ((value.players2 as Array<any>).map(Player2ToJSON)),
    };
}


